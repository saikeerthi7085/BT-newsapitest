{"version":3,"sources":["Result.js","main.js","index.js"],"names":["Result","props","testing","Resultdata","isLoading","error","console","log","Fragment","message","className","articles","map","index","author","title","content","url","key","href","main","state","searchstring","handleChange","bind","fetchnewsapi","e","this","setState","target","value","preventDefault","apiUrl","fetch","then","response","json","data","catch","src","width","height","alt","onSubmit","type","placeholder","onChange","Component","ReactDOM","render","document","querySelector"],"mappings":"gNAuCeA,MApCf,SAAgBC,GAAQ,IAAD,EAEyBA,EAAMC,QAAvCC,EAFQ,EAERA,WAAYC,EAFJ,EAEIA,UAAWC,EAFf,EAEeA,MAE9B,OADAC,QAAQC,IAAIJ,GAEV,kBAAC,IAAMK,SAAP,KACGH,EAAQ,2BAAIA,EAAMI,SAAe,KAEhCL,EAoBA,uBAAGM,UAAU,gBAlBbP,EAAWQ,SAASC,KAAI,SAACZ,EAAOa,GAAW,IAClCC,EAA+Bd,EAA/Bc,OAAQC,EAAuBf,EAAvBe,MAAMC,EAAiBhB,EAAjBgB,QAAQC,EAASjB,EAATiB,IAC7B,OACI,yBAAKP,UAAU,8BAA+BQ,IAAKL,GACnD,yBAAKH,UAAU,eACR,8CADP,KACgCK,GAEhC,yBAAKL,UAAU,aACf,uBAAGA,UAAU,aAAY,uCAAgBI,GACzC,uBAAGJ,UAAU,aAAY,uCAAgBM,GACzC,uBAAGN,UAAU,aAAY,mCAAzB,IAAqC,uBAAGS,KAAMF,GAAMA,WC2CzDG,EA3Df,kDACE,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACHoB,MAAQ,CACXC,aAAe,GAEfnB,WAAW,GACXC,WAAW,EACXC,MAAO,MAET,EAAKkB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVD,EADrB,gDAaA,SAAaE,GACXC,KAAKC,SAAS,CAACN,aAAcI,EAAEG,OAAOC,UAdxC,0BAgBA,SAAaJ,GAAG,IAAD,OACbA,EAAEK,iBACFzB,QAAQC,IAAIoB,KAAKN,MAAMC,cACvB,IAAMU,EAAS,2FAA2FL,KAAKN,MAAMC,aAEpHW,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GAAI,OACT,EAAKT,SAAS,CACZzB,WAAYkC,EACZjC,WAAW,OAKdkC,OAAM,SAAAjC,GAAK,OAAI,EAAKuB,SAAS,CAAEvB,QAAOD,WAAW,SA/BpD,oBAiCI,WACI,OACE,kBAAC,WAAD,KACE,4BAAQM,UAAU,sBAElB,yBAAK6B,IAAI,oEAAoEC,MAAM,KAAKC,OAAO,KAAK/B,UAAU,2BAA2BgC,IAAI,MAE/I,yBAAKhC,UAAU,8BAEZ,wBAAIA,UAAU,OAAd,6BACD,0BAAMiC,SAAYhB,KAAKF,cACf,2BAAOmB,KAAO,OAAOC,YAAc,yBAAyBf,MAAOH,KAAKN,MAAMC,aAAewB,SAAUnB,KAAKJ,eAC5G,2BAAOqB,KAAO,SAASC,YAAY,SAASf,MAAQ,aAG9D,kBAAC,EAAD,CAAQ5B,QAASyB,KAAKN,QAEtB,yBAAKX,UAAU,UACb,mDAnDZ,GAA0BqC,a,cCA1BC,EAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,cAAc,W","file":"static/js/main.b429e0c0.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nfunction Result(props) {\r\n    \r\n        const {Resultdata, isLoading, error } = props.testing;\r\n        console.log(Resultdata);\r\n        return (\r\n          <React.Fragment>\r\n            {error ? <p>{error.message}</p> : null}\r\n           \r\n            {!isLoading ? (\r\n                \r\n              Resultdata.articles.map((Result,index) => {\r\n                const {author, title,content,url } =  Result;\r\n                return (\r\n                    <div className=\"card p-3 m-3 body-fontcolor\"  key={index}>\r\n                    <div className=\"card-header\">\r\n                           <b>Article Title :</b>  {title}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <p className=\"card-text\"><b> Author:</b>{author}</p>\r\n                    <p className=\"card-text\"><b>Content:</b>{content}</p>\r\n                    <p className=\"card-text\"><b>URL:</b> <a href={url}>{url}</a></p>\r\n                </div>\r\n            </div>\r\n                  \r\n                );\r\n              })\r\n            // If there is a delay in data, let's let the user know it's loading\r\n            ) : (\r\n              <p className=\"text-center\"></p>\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      \r\n    \r\n}\r\n\r\nexport default Result\r\n","import React, { Component } from 'react'\r\n\r\nimport {Fragment} from 'react'\r\nimport './main.css'\r\nimport Result from \"./Result\";\r\n\r\n\r\nexport class main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  this.state = {\r\n    searchstring : '',\r\n    \r\n    Resultdata:[],\r\n    isLoading: true,\r\n    error: null\r\n  };\r\n  this.handleChange = this.handleChange.bind(this);\r\n  this.fetchnewsapi = this.fetchnewsapi.bind(this);\r\n}\r\nhandleChange(e) {\r\n  this.setState({searchstring: e.target.value});\r\n}\r\nfetchnewsapi(e){\r\n  e.preventDefault();\r\n  console.log(this.state.searchstring);\r\n  const apiUrl = 'https://newsapi.org/v2/everything?language=en&apiKey=3917467c968d441fb90e8959f83eb680&q='+this.state.searchstring ;\r\n\r\n   fetch(apiUrl)\r\n   .then((response) => response.json())\r\n   .then(data =>\r\n    this.setState({\r\n      Resultdata: data,\r\n      isLoading: false,\r\n    })\r\n    \r\n  )\r\n  // Catch any errors we hit and update the app\r\n  .catch(error => this.setState({ error, isLoading: false }));\r\n }\r\n    render() {\r\n        return (\r\n          <Fragment>\r\n            <header className=\"navbar headercolor\">\r\n          \r\n            <img src=\" https://img01.bt.co.uk/s/assets/191120/images/logo/logo-2018.svg\" width=\"50\" height=\"50\" className=\"d-inline-block align-top\" alt=\"\"/>\r\n          </header>\r\n          <div className=\"text-center body-fontcolor\">\r\n            {/* <h1>BT React Code Test - by Sai Keerthi</h1> */}\r\n             <h5 className=\"m-2\">Retrive Data from NewsApi</h5>\r\n            <form onSubmit = {this.fetchnewsapi}>\r\n                    <input type = 'text' placeholder = 'Enter Keyword Ex:Tesla' value={this.state.searchstring}  onChange={this.handleChange}></input>\r\n                    <input type = 'submit' placeholder='Submit' value = 'Submit'></input>\r\n           </form>\r\n         </div>\r\n          <Result testing={this.state}/>\r\n          \r\n          <div className=\"footer\">\r\n            <p>Copyright@2021</p>\r\n        </div>\r\n          </Fragment>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default main\r\n","import React from \"react\";\r\n\r\nimport Main from \"./main\";\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\nReactDOM.render(<Main />, document.querySelector(\"#main\"));\r\n\r\n"],"sourceRoot":""}